넥사크로

Transaction은 서버와 통신하여 데이터를 전송하고 받아오기 위한 메소드입니다.
Transaction은 Service를 호출하여 여러 개의 Dataset과 Variable를 주고받습니다.
기본통신은 Asyn 방식이므로 통신완료 후 결과 값을 Callback함수로 받습니다.

Sync(동기)

Sync 방식은 transaction 함수가 Service를 호출 후 통신이 완료되는 시점까지 대기하다가
통신 결과를 받으면 다음 스크립트를 실행합니다.

Asyn 방식은 transaction 함수가 Service를 호출 후 통신이 완료되지 않아도
다음 스크립트를 실행하고 통신완료 후 결과를 Callback함수로 받습니다.

Application.transaction(strSvcID,strURL,strInDatasets,strOutDatasets,strArgument,
strCallbackFunc[,bAsync[,nDataType[,bCompress]]])


var strSvcID = "";			// 트랜잭션을 구분하기 위한 ID
var strURL = "";			// 트랜잭션을 요청할 서버페이지 주소
var strIndatasets = "";		// 서버로 보낼 Dataset ( ServerDatasetID = FormDatasetID)
var strOutDatasets = "";	// 서버에서 보내는 데이터를 받을 Dataset (FormDatasetID = ServerDatasetID)
var strArgument = "";		// 서버로 보낼 변수 (변수ID = 변수값)
var strCallbackFunc = "":	// 서버의 처리 결과를 받을 콜백함수

bAsync 
- Transaction을 비동기(Async)로 또는 동기(Sync)처리할지 설정
- 설정값 : true - 비동기
		 false - 동기
		 default - true
		 
nDataType 
- Transaction 전송되는 데이터 형태를 설정
- 설정값 : 0 - XML
		 1 - Binary
		 2 - SSV
		 default - 0
		 
bCompress
- Transaction 데이터 압축여부
- 설정값 : true - 압축
		 false - 압축하지 않음
		 default - false
		 

CacheLevel
none : 캐시 기능을 사용하지 않습니다.
Dynamic : 서버로부터 내려받은 파일이 갱신되었을 때만 수신합니다.
session : 서버상의 파일이 갱신되지 않은 경우는 로컬 캐시(Local Cache) 파일을 재사용합니다.
엔진을 기동할 때, 단 한 번만 수신하고 해당 엔진이 종료될 때까지
로컬 캐시 파일만을 사용합니다.(엔진 기동 시 로컬 캐시 파일과 일치하면 재사용합니다.)
Static : 서버로부터 한 번이라도 내려받은 파일은 엔진 재실행과 상관없이 로캘 캐시 파일만 사용합니다.
(단, Type Definitiondp에 지정된 서비스 그룹의 버전이 변경된 경우에는 다시 내려받습니다.) 

동일 출처 정책(Same Origin Policy)
웹브라우저 실행시 클라이언트의 화면 페이지와 데이터 통신시 호출하는 서버페이지 도메인이 일치 하여야 합니다.
즉, 화면을 로컬PC에서 호출하는 서버 페이지도 동일한 도메인 http://localhost:8080 으로 호출해야 합니다.

delete는 delete buffer에 따로 쌓인다.

getRemoveRowCount - 삭제한 데이터의 row 갯수
getRemoveData - 삭제한 데이터의 정보

----------------------------------------------------------------------------------------------
