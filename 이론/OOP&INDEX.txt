OOP란 문제를 여러 개의 객체 단위로 나눠 작업하는 방식으로. 객체들이 서로 유기적으로 상호작용하는 프로그래밍 이론이다.

객체 : 세상에 존재하는 모든 것, 프로그래밍에서의 객체는 데이터의 분산을 막기 위해 데이터와 기능을 하나로 묶은 그룹
ex) 컴퓨터(객체) = 데이터(본체, 모니터, 키보드) + 기능(화면, 소리 , 출력)

OOP는 코드 재사용성과 생산성의 향상 효과를 볼 수 있고, 유지보수의 편의성 덕택에 협업이 중요하고 규모가 큰 대형 프로젝트에 사용되는 프로그래밍 이론이다. 

OOP 4가지 특징

1. 추상화(Abstraction) - 객체들이 공통적으로 필요로 하는 속성이나 동작을 하나로 추출해내는 작업
2. 캡슐화(Encapsulation) - 정보 은닉을 통해 높은 응집도, 낮은 결합도를 유지할 수 있도록 설계하는 것
3. 상속 - 여러 개체들이 지닌 공통된 특성을 부각시켜 하나의 개념이나 법칙으로 성립하는 과정
4. 다형성 - 서로 다른 클래스의 객체가 같은 동작 수행 명령을 받았을때, 각자의 특성에 맞는 방식으로 동작하는 것


ORM이란?

ORM은 Object Relational Mapping(객체-관계-매핑)의 약자이다.
ORM은 객체와 데이터베이스의 관계를 매핑해주는 도구이다.
ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑(연결)해주는 도구이다.
ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스 사이의 중계자(통역자) 역할을 한다.
ORM은 MVC 패턴에서 모델(Model)을 기술하는 도구이다.
ORM은 객체와 모델 사이의 관계를 기술하는 도구이다.

INDEX란?

Index는 DB 분야에 있어서 테이블에 대한 동작의 속도를 높여주는 자료 구조를 일컫는다.
Index는 테이블 내 1개의 컬럼, 혹은 여러 개의 컬럼을 이용하여 생성될 수 있다. 
고속의 검색 동작뿐만 아니라 레코드 접근과 관련 효율적인 순서 매김 동작에 대한 기초를 제공한다.