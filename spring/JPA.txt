JPA - 인터페이스

구현체로 hibernate등등 이 있다. ORM

JPA는 기보느이 반복 코드는 물론이고, 기본적인 SQL도 JPA가 직접 만들어서 실행해준다.
JPA를 사용하면, SQL과 데이터 중심의 설계에서 객체 중심의 설계로 패러다임을 전환을 할 수 있다.
JPA를 사용하면 개발 생산성을 크게 높일 수 있다.

gradle 설정
implementation 'org.springframework:boot:spring-boot-starter-data-jpa'  ->JDBC 설정을 포함한다

properties 설정 
spring.jpa.show-sql=true -> JPA가 날리는 sql을 볼 수 있다.
spring.jpa.hibernate.ddl-auto=none -> JPA는 객체를 보고 테이블을  생성해주는데 이미 테이블이 있어서 none

show-sql : JPA가 생성하는 SQL을 출력한다.
ddl-auto : JPA는 테이블을 자동으로 생성하는 기능을 제공하는데 none을 사용하면 해당 기능을 끈다.
create를 사용하면 엔티티 정보를 바탕으로 테이블도 직접 생성해준다. -> 해보자

JPA는 entityManager 라는 것으로 모든 것이 동작을 해서 rspository에 선언하면 된다.

저장 조회 업데이트는  sql 짤 필요가 없다

주의 점
항상 트랜잭션이란게 있어야한다      @Transactional
